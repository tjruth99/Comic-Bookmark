{"version":3,"sources":["pages/components/HomeList.js","pages/Home.js","pages/components/ComicList.js","pages/Comics.js","pages/components/ProfileList.js","pages/Forms/LogInForm.js","pages/LogIn.js","pages/Forms/SignUpForm.js","pages/SignUp.js","pages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["HomeList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","email","componentDidMount","bind","assertThisInitialized","listElement","renderList","setState","localStorage","getItem","name","curIssueNum","issues","react_default","a","createElement","className","sampleList","list","i","length","push","React","Component","Home","HomeList_HomeList","ComicList","startReading","seriesName","numIssues","alert","console","log","firebase","currentUser","uid","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","userID","then","data","catch","error","concat","comicList","getComics","json","map","_this2","_this3","type","onClick","Comics","ComicList_ComicList","ProfileList","getUserReadings","getIssueFromSeries","nextOrRemove","getIssue","onAuthStateChanged","user","currentIssue","issueName","_context","t0","serieName","issueNumber","window","location","reload","stopReading","nextIssue","prevIssue","LogInForm","password","redirect","getUsernameFromID","handleInputChange","handleLogIn","setItem","id","event","_event$target","target","value","defineProperty","signInWithEmailAndPassword","handleAuthenticationUpdate","message","react_router","to","onChange","LogIn","Forms_LogInForm","SignUpForm","addUserToDatabase","componentDidUpdate","handleSignUp","createUserWithEmailAndPassword","SignUp","Forms_SignUpForm","Profile","signOut","removeItem","react_router_dom","path","component","ProfileList_ProfileList","App","exact","Boolean","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6cf3ccc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class HomeList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\"\r\n    };\r\n\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    \r\n    this.listElement = this.listElement.bind(this);\r\n    this.renderList = this.renderList.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      username: localStorage.getItem('_username'),\r\n      email: localStorage.getItem('_userEmail')\r\n    })\r\n  }\r\n\r\n  listElement(username, name, curIssueNum, issues) {\r\n    return (\r\n      <div>\r\n        <div className=\"comicList\">\r\n          <h3>{username} is reading:</h3>\r\n          <h2>{name}</h2>\r\n          <h4>{curIssueNum} / {issues} issues</h4>\r\n          <p>Current Issue: Issue #1</p>\r\n        </div>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderList() {\r\n    // TODO: Create a firebase function to get all comics from the database and put them in an Array\r\n    // Use that to create this list\r\n\r\n    var sampleList = ['Series 1', 'Series 2', 'Series 3', 'Series 4', 'Series 5'];\r\n    var issues = ['33', '20', '120', '3', '10'];\r\n    let list = [];\r\n    for(var i = 0; i < sampleList.length; i++){\r\n      list.push(this.listElement(\"Username\", sampleList[i], 1, issues[i]));\r\n    }\r\n    return list;\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>{this.renderList()}</div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport HomeList from './components/HomeList'\r\n\r\nclass Home extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\"\r\n    };\r\n\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      username: localStorage.getItem('_username'),\r\n      email: localStorage.getItem('_userEmail')\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Home Page</h1>\r\n        <p>\r\n          Display a list of users and what stories they are currently reading and what issue they are on\r\n        </p>\r\n        <HomeList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport * as firebase from 'firebase';\r\n\r\nexport default class ComicList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n\r\n      comicList: []\r\n    };\r\n\r\n    this.getComics = this.getComics.bind(this)\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.startReading = this.startReading.bind(this);\r\n\r\n    this.listElement = this.listElement.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      username: localStorage.getItem('_username'),\r\n      email: localStorage.getItem('_userEmail')\r\n    })\r\n\r\n    this.getComics();\r\n  }\r\n\r\n  async getComics(){\r\n    let data = await fetch(\r\n      \"https://us-central1-comicbookmark-970b7.cloudfunctions.net/getComics\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n        })\r\n      });\r\n\r\n    data = await data.json();\r\n\r\n    console.log(\"data: \" + JSON.stringify(data));\r\n\r\n    this.setState({\r\n      comicList: data.map((data) => (this.listElement(data.seriesName, data.numIssues)))\r\n    })\r\n  }\r\n\r\n  startReading = (seriesName, numIssues) => {\r\n    if( this.state.email === null ){\r\n      alert(\"You are not signed in\");\r\n    } else {\r\n      console.log(\"startReading start\");\r\n      console.log(\"userID: \" + firebase.auth().currentUser.uid);\r\n      console.log(\"seriesName: \" + seriesName);\r\n      fetch(\r\n          \"https://us-central1-comicbookmark-970b7.cloudfunctions.net/startReading\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n              userID: firebase.auth().currentUser.uid,\r\n              seriesName: seriesName,\r\n              numIssues: numIssues\r\n            })\r\n          }\r\n        )\r\n        .then(data => {\r\n          console.log(\"startReading end\");\r\n        })\r\n        .catch(error => console.error(`Error: startReading ${error}`));\r\n    }\r\n  }\r\n\r\n\r\n  listElement(name, issues) {\r\n    return (\r\n      <div>\r\n        <div className=\"comicList\">\r\n          <h2>{name}</h2>\r\n          <h4>{issues} issues</h4>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => this.startReading(name, issues)}\r\n          >\r\n            Start Reading\r\n          </button>\r\n        </div>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>{this.state.comicList}</div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ComicList from './components/ComicList';\r\n\r\nclass Comics extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\"\r\n    };\r\n\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      username: localStorage.getItem('_username'),\r\n      email: localStorage.getItem('_userEmail')\r\n    })\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Comics</h1>\r\n        <p>\r\n          Select a comic to start reading:\r\n        </p>\r\n        <ComicList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comics\r\n","import React from 'react';\r\nimport * as firebase from 'firebase';\r\n\r\nexport default class ProfileList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      userID: \"\",\r\n\r\n      comicList: []\r\n    };\r\n\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n\r\n    this.getUserReadings = this.getUserReadings.bind(this);\r\n    this.getIssueFromSeries = this.getIssueFromSeries.bind(this);\r\n    this.listElement = this.listElement.bind(this);\r\n\r\n    this.nextOrRemove = this.nextOrRemove.bind(this);\r\n\r\n    this.getIssue = this.getIssue.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    firebase.auth().onAuthStateChanged(function(user) {\r\n      if (user) {\r\n        // User is signed in.\r\n        this.setState({\r\n          userID: firebase.auth().currentUser.uid\r\n        });\r\n        this.getUserReadings();\r\n      } else {\r\n        // No user is signed in.\r\n      }\r\n    }.bind(this));\r\n  }\r\n\r\n  async getUserReadings(){\r\n    try{\r\n      console.log(\"getUserReadings\");\r\n      console.log(\"userID: \" + this.state.userID);\r\n      let data = await fetch(\r\n        \"https://us-central1-comicbookmark-970b7.cloudfunctions.net/getUserReadings\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            userID: this.state.userID\r\n          })\r\n        });\r\n\r\n      data = await data.json();\r\n\r\n      console.log(\"data: \" + JSON.stringify(data));\r\n\r\n      for( var i = 0; i < data.length; i++){\r\n        data[i].issueName =  await this.getIssueFromSeries(data[i].seriesName, data[i].currentIssue);\r\n      }\r\n\r\n      console.log(\"data: \" + JSON.stringify(data));\r\n\r\n      this.setState({\r\n        comicList: data.map((data) => (this.listElement(data.seriesName, data.currentIssue, data.numIssues, data.issueName)))\r\n      })\r\n    } catch (err){\r\n      console.error(`Error: getUserReadings ${err}`);\r\n    }\r\n  }\r\n\r\n  getIssue(serieName, issueNumber){\r\n    return this.getIssueFromSeries(serieName, issueNumber);\r\n  }\r\n\r\n  async getIssueFromSeries(seriesName, issueNumber) {\r\n    var issueName;\r\n    console.log(\"getIssueFromSeries\");\r\n    console.log(\"seriesName: \" + seriesName);\r\n    console.log(\"issueNumber: \" + issueNumber);\r\n    let data = await fetch(\r\n        \"https://us-central1-comicbookmark-970b7.cloudfunctions.net/getIssueFromSeries\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            seriesName: seriesName,\r\n            issueNumber: issueNumber\r\n          })\r\n        }\r\n      );\r\n\r\n    data = await data.json();\r\n\r\n    issueName = data.issues[issueNumber];\r\n\r\n    return issueName;\r\n  }\r\n\r\n  prevIssue(seriesName) {\r\n    console.log(\"prevIssue\");\r\n    console.log(\"userID: \" + firebase.auth().currentUser.uid);\r\n    console.log(\"seriesName: \" + seriesName);\r\n    fetch(\r\n        \"https://us-central1-comicbookmark-970b7.cloudfunctions.net/prevIssue\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            userID: firebase.auth().currentUser.uid,\r\n            seriesName: seriesName\r\n          })\r\n        }\r\n      )\r\n      .then(data => {\r\n        console.log(\"prevIssue end\");\r\n        window.location.reload();\r\n      })\r\n      .catch(error => console.error(`Error: prevIssue ${error}`));\r\n    window.location.reload();\r\n  }\r\n\r\n  nextOrRemove(seriesName, currentIssue, numIssues){\r\n    if( currentIssue === (numIssues - 1) ){\r\n      console.log(\"REMOVE SERIES\");\r\n      this.stopReading(seriesName);\r\n    } else {\r\n      this.nextIssue(seriesName);\r\n    }\r\n  }\r\n\r\n  nextIssue(seriesName) {\r\n    console.log(\"nextIssue\");\r\n    console.log(\"userID: \" + firebase.auth().currentUser.uid);\r\n    console.log(\"seriesName: \" + seriesName);\r\n    fetch(\r\n        \"https://us-central1-comicbookmark-970b7.cloudfunctions.net/nextIssue\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            userID: firebase.auth().currentUser.uid,\r\n            seriesName: seriesName\r\n          })\r\n        }\r\n      )\r\n      .then(data => {\r\n        console.log(\"nextIssue end\");\r\n        window.location.reload();\r\n      })\r\n      .catch(error => console.error(`Error: nextIssue ${error}`));\r\n  }\r\n\r\n  stopReading(seriesName) {\r\n    console.log(\"stopReading\");\r\n    console.log(\"userID: \" + firebase.auth().currentUser.uid);\r\n    console.log(\"seriesName: \" + seriesName);\r\n    fetch(\r\n        \"https://us-central1-comicbookmark-970b7.cloudfunctions.net/stopReading\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            userID: firebase.auth().currentUser.uid,\r\n            seriesName: seriesName\r\n          })\r\n        }\r\n      )\r\n      .then(data => {\r\n        console.log(\"stopReading end\");\r\n        window.location.reload();\r\n      })\r\n      .catch(error => console.error(`Error: nextIssue ${error}`));\r\n  }\r\n\r\n  listElement(seriesName, currentIssue, numIssues, issueName) {\r\n    return (\r\n      <div>\r\n        <div className=\"comicList\">\r\n          <h2>{seriesName}</h2>\r\n          <h4>{currentIssue + 1} / {numIssues} issues</h4>\r\n          <p>{issueName}</p>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => this.prevIssue(seriesName)}\r\n          >\r\n            Prev Issue\r\n          </button>\r\n          <div className=\"divider\" />\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => this.nextOrRemove(seriesName, currentIssue, numIssues)}\r\n          >\r\n            Next Issue\r\n          </button>\r\n        </div>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>{this.state.comicList}</div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router'\r\nimport * as firebase from 'firebase';\r\n\r\nclass LogInForm extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      userID: \"\",\r\n\r\n      redirect: false\r\n    };\r\n\r\n    this.getUsernameFromID = this.getUsernameFromID.bind(this);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleLogIn = this.handleLogIn.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  }\r\n\r\n  async getUsernameFromID() {\r\n    console.log(\"getUsernameFromID\");\r\n    console.log(\"userID: \" + firebase.auth().currentUser.uid);\r\n    let data = await fetch(\r\n        \"https://us-central1-comicbookmark-970b7.cloudfunctions.net/getUserFromID\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            userID: firebase.auth().currentUser.uid\r\n          })\r\n        }\r\n      )\r\n    data = await data.json();\r\n    console.log(\"username data: \" + data);\r\n    console.log(data.username);\r\n    localStorage.setItem('_username', data.username);\r\n  }\r\n\r\n  handleAuthenticationUpdate() {\r\n    // TODO: get username form database and set local storage\r\n\r\n    localStorage.setItem('_userEmail', this.state.email);\r\n\r\n    var id;\r\n\r\n    firebase.auth().onAuthStateChanged(function(user) {\r\n      if (user) {\r\n        // User is signed in.\r\n        console.log(\"inside onauthchanged\");\r\n        console.log(firebase.auth().currentUser.uid);\r\n        id = firebase.auth().currentUser.uid;\r\n      } else {\r\n        // No user is signed in.\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      userID: id,\r\n      redirect: true\r\n    })\r\n\r\n    localStorage.setItem('_userID', id);\r\n\r\n    this.getUsernameFromID();\r\n\r\n    //window.location.reload();\r\n  };\r\n\r\n  handleInputChange(event) {\r\n    const {name, value} = event.target\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleLogIn() {\r\n    console.log(\"handleLogIn\");\r\n\r\n    firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(() => {\r\n        this.handleAuthenticationUpdate();\r\n      })\r\n      .catch(function(error) {\r\n        alert(\"Error when signing in\", error.message)\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  render () {\r\n\r\n    if(this.state.redirect){\r\n      return <Redirect to='/profile'/>;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"container\"\r\n      >\r\n        <form>\r\n          <label>\r\n            Email:\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.email}\r\n              name=\"email\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Password:\r\n            <input\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              name=\"password\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <br /><br />\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.handleLogIn}\r\n          >\r\n            Log In\r\n          </button>\r\n        </form>\r\n      </ div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogInForm;\r\n","import React from 'react';\r\nimport LogInForm from './Forms/LogInForm'\r\n\r\nclass LogIn extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\"\r\n    };\r\n\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      username: localStorage.getItem('_username'),\r\n      email: localStorage.getItem('_userEmail')\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <LogInForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router'\r\nimport * as firebase from 'firebase';\r\n\r\nclass SignUpForm extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      userID: \"\",\r\n\r\n      redirect: false\r\n    };\r\n\r\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.addUserToDatabase = this.addUserToDatabase.bind(this);\r\n    this.handleSignUp = this.handleSignUp.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n  }\r\n\r\n  addUserToDatabase = () => {\r\n    console.log(\"addUserToDatabase\");\r\n    console.log(\"UserID: \" + this.state.userID);\r\n    console.log(\"username: \" + this.state.username);\r\n    fetch(\r\n        \"https://us-central1-comicbookmark-970b7.cloudfunctions.net/addUserToDatabase\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            userID: this.state.userID,\r\n            username: this.state.username\r\n          })\r\n        }\r\n      )\r\n        .then(data => {\r\n          console.log(\"SUCCESS!?\");\r\n        })\r\n        .catch(error => console.error(`Error: addUserToDatabase ${error}`));\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const {name, value} = event.target\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSignUp() {\r\n    console.log(\"handleSignUp\");\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(() => {\r\n        console.log(\"Created Account\");\r\n        \r\n        this.setState({\r\n          userID: firebase.auth().currentUser.uid,\r\n          redirect: true\r\n        })\r\n\r\n        localStorage.setItem('_username', this.state.username);\r\n        localStorage.setItem('_userEmail', this.state.email);\r\n        localStorage.setItem('_userID', this.state.userID);\r\n\r\n        this.addUserToDatabase();\r\n        window.location.reload();\r\n      })\r\n      .catch(function(error) {\r\n        alert(\"Error when creating account: \" + error.message)\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  render () {\r\n\r\n    if(this.state.redirect){\r\n      return <Redirect to='/profile'/>;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"container\"\r\n      >\r\n        <form>\r\n          <label>\r\n            Username:\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.username}\r\n              name=\"username\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Email:\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.email}\r\n              name=\"email\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Password:\r\n            <input\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              name=\"password\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <br /><br />\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.handleSignUp}\r\n          >\r\n            Create\r\n          </button>\r\n        </form>\r\n      </ div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React from 'react';\r\nimport SignUpForm from './Forms/SignUpForm';\r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\"\r\n    };\r\n\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      username: localStorage.getItem('_username'),\r\n      email: localStorage.getItem('_userEmail')\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>SignUp</h1>\r\n        <SignUpForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp\r\n","import React from 'react';\r\nimport ProfileList from './components/ProfileList'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport LogIn from \"./LogIn\";\r\nimport SignUp from \"./SignUp\";\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\"\r\n    };\r\n\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.signOut = this.signOut.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      username: localStorage.getItem('_username'),\r\n      email: localStorage.getItem('_userEmail')\r\n    })\r\n  }\r\n\r\n  signOut(){\r\n    // If, the user is signed in\r\n    console.log(\"Sign out\");\r\n    localStorage.removeItem('_username');\r\n    localStorage.removeItem('_userEmail');\r\n    localStorage.removeItem('_userID');\r\n\r\n    this.setState({\r\n      username: \"\",\r\n      email: \"\"\r\n    })\r\n\r\n    firebase.auth().signOut()\r\n      .then(() => {\r\n        // Do Something\r\n      })\r\n      .catch(function(error) {\r\n        alert(\"Error when signing out: \" + error.message)\r\n        console.log(error.message);\r\n      });\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  render () {\r\n    if( this.state.email == null ){\r\n      return (\r\n        <div>\r\n          <h2>Please Sign In</h2>\r\n          <br />\r\n          <Router>\r\n            <Link to=\"/profile/login\">\r\n              <button\r\n                name=\"loginButton\"\r\n                type=\"button\"\r\n                className=\"authButton\"\r\n              >\r\n                Login\r\n              </button>\r\n            </Link>\r\n            <div className=\"divider\" />\r\n            <Link to=\"/profile/signup\">\r\n              <button\r\n                name=\"signupButton\"\r\n                type=\"button\"\r\n                className=\"authButton\"\r\n              >\r\n                Sign-Up\r\n              </button>\r\n            </Link>\r\n            <Route path=\"/profile/login\" component={LogIn} />\r\n            <Route path=\"/profile/signup\" component={SignUp} />\r\n          </ Router>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>{this.state.username}'s Profile</h1>\r\n          <h3>Email: {this.state.email}</h3>\r\n          <p>\r\n            What you are currently reading:\r\n          </p>\r\n          <ProfileList />\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.signOut}\r\n          >\r\n            Sign Out\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Profile\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Home from \"./pages/Home\";\r\nimport Comics from \"./pages/Comics\";\r\nimport Profile from \"./pages/Profile\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      username: localStorage.getItem('_username'),\r\n      email: localStorage.getItem('_userEmail')\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <Router>\r\n        <header className=\"App-header\">\r\n          <h1>Comic Bookmark</h1>\r\n          <div>\r\n            <Link to=\"/\">\r\n              <button\r\n                name=\"homeButton\"\r\n                type=\"button\"\r\n                className=\"navButton\"\r\n              >\r\n                Home\r\n              </button>\r\n            </Link>\r\n            <div className=\"divider\" />\r\n            <Link to=\"/comics\">\r\n              <button\r\n                name=\"comicsButton\"\r\n                type=\"button\"\r\n                className=\"navButton\"\r\n              >\r\n                Comics\r\n              </button>\r\n            </Link>\r\n            <div className=\"divider\" />\r\n            <Link to=\"/profile\">\r\n              <button\r\n                name=\"profileButton\"\r\n                type=\"button\"\r\n                className=\"navButton\"\r\n              >\r\n                Profile\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <br/>\r\n        </header>\r\n        <div>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/comics\" component={Comics} />\r\n          <Route path=\"/profile\" component={Profile} />\r\n        </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as firebase from 'firebase';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: \"AIzaSyDFtVfjj31koxhQww3kKKca_B7fsHgLycY\",\r\n  authDomain: \"comicbookmark-970b7.firebaseapp.com\",\r\n  databaseURL: \"https://comicbookmark-970b7.firebaseio.com\",\r\n  projectId: \"comicbookmark-970b7\",\r\n  storageBucket: \"comicbookmark-970b7.appspot.com\",\r\n  messagingSenderId: \"299485631413\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}